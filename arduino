#include <Arduino.h>
#include <ros.h>
#include "std_msgs/Int16.h"
#include "std_msgs/String.h"
#include <std_msgs/Empty.h>

#define NUM_LEDS 24
#define DATA_PIN 30
int col123=0;

CRGB leds[NUM_LEDS];

String sub_data = "";

void lamps0();
void lamps1();
void lamps2();
void lamps3();

class NewHardware : public ArduinoHardware
{
public:
NewHardware():ArduinoHardware(&Serial1, 115200){};
};

ros::NodeHandle_<NewHardware> nh;
std_msgs::String tt;
ros::Publisher pub("Hi", &tt);

void messageCb( const std_msgs::Int16& toggle_msg){
if (toggle_msg.data!=0)
{
int col123 = toggle_msg.data;
if (col123 == 1)
{
digitalWrite(26, HIGH);
digitalWrite(27, LOW);
digitalWrite(28, LOW);
digitalWrite(29, LOW);
}

if (col123== 2)
{
digitalWrite(26, LOW);
digitalWrite(27, HIGH);
digitalWrite(28, LOW);
digitalWrite(29, LOW);
}
Serial.println(col123);
}


}

// if (col == 0){lamps0();}
// if (col == 1){lamps1();}
// if (col == 2){lamps2();}
// if (col == 3){lamps3();}

ros::Subscriber<std_msgs::Int16> sub("toggle_led", &messageCb );

void setup() {
Serial.begin(9600);

LEDS.addLeds<WS2812,DATA_PIN,RGB>(leds,NUM_LEDS);
LEDS.setBrightness(60);

nh.initNode();
nh.advertise(pub);
nh.subscribe(sub);

pinMode(26, OUTPUT);
pinMode(27, OUTPUT);
pinMode(28, OUTPUT);
pinMode(29, OUTPUT);

pinMode(22, INPUT);
pinMode(23, INPUT);
pinMode(24, INPUT);
pinMode(25, INPUT);
}

bool flag1 = false;
bool flag2 = false;

uint32_t btnTimer1 = 0;
uint32_t btnTimer2 = 0;

int col= 0;
int col1 = 0;

int currentButtonState1 = 0;
int currentButtonState2 = 0;

char hello[13] = "hello world!";

void loop() {


tt.data = hello;
bool btnState1 = !digitalRead(23);

pub.publish(&tt);
nh.spinOnce();
delay(1);

// if (col123!=0){
// col = col123;

// }
// Serial.println(col);

int currentButtonState1 = digitalRead(23);

if (btnState1 && !flag1 && millis() - btnTimer1 > 10)
{
flag1 = true;
btnTimer1 = millis();
}

if (btnState1 && flag1 && millis() - btnTimer1 > 50)
{
btnTimer1 = millis();
}

if (!btnState1 && flag1 && millis() - btnTimer1 > 50)
{
flag1 = false;
btnTimer1 = millis();
col = (col+1)%4;
}



// bool btnState2 = !digitalRead(24);
// int currentButtonState2 = digitalRead(24);

// if (btnState2 && !flag2 && millis() - btnTimer2 > 50)
// {
// flag2 = true;
// btnTimer2 = millis();
// }

// if (btnState2 && flag2 && millis() - btnTimer2 > 50)
// {
// btnTimer2 = millis();
// }

// if (!btnState2 && flag2 && millis() - btnTimer2 > 50)
// {
// flag2 = false;
// btnTimer2 = millis();
// col1 = (col1+1)%4;
// }


//if(digitalRead(24)) {col1 = (col1+1)%4;}

if (col123 == 1)
{
digitalWrite(26, HIGH);
digitalWrite(27, LOW);
digitalWrite(28, LOW);
digitalWrite(29, LOW);
}

if (col123== 2)
{
digitalWrite(26, LOW);
digitalWrite(27, HIGH);
digitalWrite(28, LOW);
digitalWrite(29, LOW);
}

if (col123 == 3)
{
digitalWrite(26, LOW);
digitalWrite(27, LOW);
digitalWrite(28, HIGH);
digitalWrite(29, LOW);
}

if (col123 == 4)
{
digitalWrite(26, LOW);
digitalWrite(27, LOW);
digitalWrite(28, LOW);
digitalWrite(29, HIGH);
}
// Serial.println(col);
if (col == 0){lamps0();}
if (col == 1){lamps1();}
if (col == 2){lamps2();}
if (col == 3){lamps3();}

}

void offlamps() {
for(int i = 0; i < NUM_LEDS; i++) {
leds[i] = CHSV(0, 0, 0);
FastLED.show();

}
}

void lamps0() {
for(int i = 0; i < NUM_LEDS; i++) {
leds[i] = CHSV(10, 255, 255);
FastLED.show();
}
}

void lamps1() {
for(int i = 0; i < NUM_LEDS; i++) {
leds[i] = CHSV(255, 10, 255);
FastLED.show();
}
}

void lamps2() {
for(int i = 0; i < NUM_LEDS; i++) {
leds[i] = CHSV(15, 100, 255);
FastLED.show();
}
}

void lamps3() {
for(int i = 0; i < NUM_LEDS; i++) {
leds[i] = CHSV(15, 255, 100);
FastLED.show();
